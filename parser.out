Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> NEWH ID LLAVEI l_hab PCOMA ACCE l_acc PCOMA reglas LLAVED
Rule 2     l_hab -> PARENI hab PAREND l_hab_1
Rule 3     l_hab_1 -> <empty>
Rule 4     l_hab_1 -> COMA PARENI hab PAREND l_hab_1
Rule 5     l_acc -> acc l_acc_1
Rule 6     l_acc_1 -> <empty>
Rule 7     l_acc_1 -> COMA acc l_acc_1
Rule 8     hab -> ID COMA dim PCOMA sens PCOMA actuas
Rule 9     acc -> PARENI ID GUION ID PAREND
Rule 10    dim -> PARENI NUM COMA NUM PAREND
Rule 11    sens -> sen sens_1
Rule 12    sens_1 -> <empty>
Rule 13    sens_1 -> COMA sen sens_1
Rule 14    sen_lum -> ID LUM IGUAL NUM
Rule 15    sen_tem -> ID TEM IGUAL NUM
Rule 16    sen_pre -> ID PRE IGUAL TRUE
Rule 17    sen_pre -> ID PRE IGUAL FALSE
Rule 18    sen_gas -> ID GAS IGUAL TRUE
Rule 19    sen_gas -> ID GAS IGUAL FALSE
Rule 20    sen_fue -> ID FUE IGUAL TRUE
Rule 21    sen_fue -> ID FUE IGUAL FALSE
Rule 22    sen_hum -> ID HUM IGUAL NUM
Rule 23    sen -> sen_lum
Rule 24    sen -> sen_tem
Rule 25    sen -> sen_pre
Rule 26    sen -> sen_gas
Rule 27    sen -> sen_fue
Rule 28    sen -> sen_hum
Rule 29    actuas -> actua actuas_1
Rule 30    actuas_1 -> <empty>
Rule 31    actuas_1 -> COMA actua actuas_1
Rule 32    actua -> actua_cale
Rule 33    actua -> actua_air
Rule 34    actua -> actua_pers
Rule 35    actua -> actua_roci
Rule 36    actua -> actua_alar
Rule 37    actua_cale -> ID CALE IGUAL NUM
Rule 38    actua_air -> ID AIRE IGUAL NUM
Rule 39    actua_pers -> ID PERS IGUAL SUBIR
Rule 40    actua_pers -> ID PERS IGUAL BAJAR
Rule 41    actua_pers -> ID PERS IGUAL PARAR
Rule 42    actua_roci -> ID ROCI IGUAL TRUE
Rule 43    actua_roci -> ID ROCI IGUAL FALSE
Rule 44    actua_alar -> ID ALAR IGUAL TRUE
Rule 45    actua_alar -> ID ALAR IGUAL FALSE
Rule 46    reglas -> iff reglas_1
Rule 47    reglas_1 -> <empty>
Rule 48    reglas_1 -> PCOMA iff reglas_1
Rule 49    iff -> SI PARENI conds PAREND LLAVEI conse LLAVED
Rule 50    conds -> condi conds_1
Rule 51    conds_1 -> <empty>
Rule 52    conds_1 -> AND condi conds_1
Rule 53    conds_1 -> OR condi conds_1
Rule 54    condi -> condiB
Rule 55    condi -> condiN
Rule 56    condiB -> ID compaB TRUE
Rule 57    condiB -> ID compaB FALSE
Rule 58    condiN -> ID compa NUM
Rule 59    conse -> actua conse_1
Rule 60    conse_1 -> <empty>
Rule 61    conse_1 -> COMA actua conse_1
Rule 62    compa -> MENOR
Rule 63    compa -> MAYOR
Rule 64    compa -> IGUAL
Rule 65    compaB -> IGUALC
Rule 66    compaB -> DISTIN

Terminals, with rules where they appear

ACCE                 : 1
AIRE                 : 38
ALAR                 : 44 45
AND                  : 52
BAJAR                : 40
CALE                 : 37
COMA                 : 4 7 8 10 13 31 61
DISTIN               : 66
FALSE                : 17 19 21 43 45 57
FUE                  : 20 21
GAS                  : 18 19
GUION                : 9
HUM                  : 22
ID                   : 1 8 9 9 14 15 16 17 18 19 20 21 22 37 38 39 40 41 42 43 44 45 56 57 58
IGUAL                : 14 15 16 17 18 19 20 21 22 37 38 39 40 41 42 43 44 45 64
IGUALC               : 65
LLAVED               : 1 49
LLAVEI               : 1 49
LUM                  : 14
MAYOR                : 63
MENOR                : 62
NEWH                 : 1
NUM                  : 10 10 14 15 22 37 38 58
OR                   : 53
PARAR                : 41
PAREND               : 2 4 9 10 49
PARENI               : 2 4 9 10 49
PCOMA                : 1 1 8 8 48
PERS                 : 39 40 41
PRE                  : 16 17
ROCI                 : 42 43
SI                   : 49
SUBIR                : 39
TEM                  : 15
TRUE                 : 16 18 20 42 44 56
error                : 

Nonterminals, with rules where they appear

acc                  : 5 7
actua                : 29 31 59 61
actua_air            : 33
actua_alar           : 36
actua_cale           : 32
actua_pers           : 34
actua_roci           : 35
actuas               : 8
actuas_1             : 29 31
compa                : 58
compaB               : 56 57
condi                : 50 52 53
condiB               : 54
condiN               : 55
conds                : 49
conds_1              : 50 52 53
conse                : 49
conse_1              : 59 61
dim                  : 8
hab                  : 2 4
iff                  : 46 48
l_acc                : 1
l_acc_1              : 5 7
l_hab                : 1
l_hab_1              : 2 4
prog                 : 0
reglas               : 1
reglas_1             : 46 48
sen                  : 11 13
sen_fue              : 27
sen_gas              : 26
sen_hum              : 28
sen_lum              : 23
sen_pre              : 25
sen_tem              : 24
sens                 : 8
sens_1               : 11 13

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . NEWH ID LLAVEI l_hab PCOMA ACCE l_acc PCOMA reglas LLAVED

    NEWH            shift and go to state 2

    prog                           shift and go to state 1

state 1

    (0) S' -> prog .



state 2

    (1) prog -> NEWH . ID LLAVEI l_hab PCOMA ACCE l_acc PCOMA reglas LLAVED

    ID              shift and go to state 3


state 3

    (1) prog -> NEWH ID . LLAVEI l_hab PCOMA ACCE l_acc PCOMA reglas LLAVED

    LLAVEI          shift and go to state 4


state 4

    (1) prog -> NEWH ID LLAVEI . l_hab PCOMA ACCE l_acc PCOMA reglas LLAVED
    (2) l_hab -> . PARENI hab PAREND l_hab_1

    PARENI          shift and go to state 6

    l_hab                          shift and go to state 5

state 5

    (1) prog -> NEWH ID LLAVEI l_hab . PCOMA ACCE l_acc PCOMA reglas LLAVED

    PCOMA           shift and go to state 7


state 6

    (2) l_hab -> PARENI . hab PAREND l_hab_1
    (8) hab -> . ID COMA dim PCOMA sens PCOMA actuas

    ID              shift and go to state 9

    hab                            shift and go to state 8

state 7

    (1) prog -> NEWH ID LLAVEI l_hab PCOMA . ACCE l_acc PCOMA reglas LLAVED

    ACCE            shift and go to state 10


state 8

    (2) l_hab -> PARENI hab . PAREND l_hab_1

    PAREND          shift and go to state 11


state 9

    (8) hab -> ID . COMA dim PCOMA sens PCOMA actuas

    COMA            shift and go to state 12


state 10

    (1) prog -> NEWH ID LLAVEI l_hab PCOMA ACCE . l_acc PCOMA reglas LLAVED
    (5) l_acc -> . acc l_acc_1
    (9) acc -> . PARENI ID GUION ID PAREND

    PARENI          shift and go to state 15

    l_acc                          shift and go to state 13
    acc                            shift and go to state 14

state 11

    (2) l_hab -> PARENI hab PAREND . l_hab_1
    (3) l_hab_1 -> .
    (4) l_hab_1 -> . COMA PARENI hab PAREND l_hab_1

    PCOMA           reduce using rule 3 (l_hab_1 -> .)
    COMA            shift and go to state 17

    l_hab_1                        shift and go to state 16

state 12

    (8) hab -> ID COMA . dim PCOMA sens PCOMA actuas
    (10) dim -> . PARENI NUM COMA NUM PAREND

    PARENI          shift and go to state 19

    dim                            shift and go to state 18

state 13

    (1) prog -> NEWH ID LLAVEI l_hab PCOMA ACCE l_acc . PCOMA reglas LLAVED

    PCOMA           shift and go to state 20


state 14

    (5) l_acc -> acc . l_acc_1
    (6) l_acc_1 -> .
    (7) l_acc_1 -> . COMA acc l_acc_1

    PCOMA           reduce using rule 6 (l_acc_1 -> .)
    COMA            shift and go to state 22

    l_acc_1                        shift and go to state 21

state 15

    (9) acc -> PARENI . ID GUION ID PAREND

    ID              shift and go to state 23


state 16

    (2) l_hab -> PARENI hab PAREND l_hab_1 .

    PCOMA           reduce using rule 2 (l_hab -> PARENI hab PAREND l_hab_1 .)


state 17

    (4) l_hab_1 -> COMA . PARENI hab PAREND l_hab_1

    PARENI          shift and go to state 24


state 18

    (8) hab -> ID COMA dim . PCOMA sens PCOMA actuas

    PCOMA           shift and go to state 25


state 19

    (10) dim -> PARENI . NUM COMA NUM PAREND

    NUM             shift and go to state 26


state 20

    (1) prog -> NEWH ID LLAVEI l_hab PCOMA ACCE l_acc PCOMA . reglas LLAVED
    (46) reglas -> . iff reglas_1
    (49) iff -> . SI PARENI conds PAREND LLAVEI conse LLAVED

    SI              shift and go to state 29

    reglas                         shift and go to state 27
    iff                            shift and go to state 28

state 21

    (5) l_acc -> acc l_acc_1 .

    PCOMA           reduce using rule 5 (l_acc -> acc l_acc_1 .)


state 22

    (7) l_acc_1 -> COMA . acc l_acc_1
    (9) acc -> . PARENI ID GUION ID PAREND

    PARENI          shift and go to state 15

    acc                            shift and go to state 30

state 23

    (9) acc -> PARENI ID . GUION ID PAREND

    GUION           shift and go to state 31


state 24

    (4) l_hab_1 -> COMA PARENI . hab PAREND l_hab_1
    (8) hab -> . ID COMA dim PCOMA sens PCOMA actuas

    ID              shift and go to state 9

    hab                            shift and go to state 32

state 25

    (8) hab -> ID COMA dim PCOMA . sens PCOMA actuas
    (11) sens -> . sen sens_1
    (23) sen -> . sen_lum
    (24) sen -> . sen_tem
    (25) sen -> . sen_pre
    (26) sen -> . sen_gas
    (27) sen -> . sen_fue
    (28) sen -> . sen_hum
    (14) sen_lum -> . ID LUM IGUAL NUM
    (15) sen_tem -> . ID TEM IGUAL NUM
    (16) sen_pre -> . ID PRE IGUAL TRUE
    (17) sen_pre -> . ID PRE IGUAL FALSE
    (18) sen_gas -> . ID GAS IGUAL TRUE
    (19) sen_gas -> . ID GAS IGUAL FALSE
    (20) sen_fue -> . ID FUE IGUAL TRUE
    (21) sen_fue -> . ID FUE IGUAL FALSE
    (22) sen_hum -> . ID HUM IGUAL NUM

    ID              shift and go to state 33

    sens                           shift and go to state 34
    sen                            shift and go to state 35
    sen_lum                        shift and go to state 36
    sen_tem                        shift and go to state 37
    sen_pre                        shift and go to state 38
    sen_gas                        shift and go to state 39
    sen_fue                        shift and go to state 40
    sen_hum                        shift and go to state 41

state 26

    (10) dim -> PARENI NUM . COMA NUM PAREND

    COMA            shift and go to state 42


state 27

    (1) prog -> NEWH ID LLAVEI l_hab PCOMA ACCE l_acc PCOMA reglas . LLAVED

    LLAVED          shift and go to state 43


state 28

    (46) reglas -> iff . reglas_1
    (47) reglas_1 -> .
    (48) reglas_1 -> . PCOMA iff reglas_1

    LLAVED          reduce using rule 47 (reglas_1 -> .)
    PCOMA           shift and go to state 45

    reglas_1                       shift and go to state 44

state 29

    (49) iff -> SI . PARENI conds PAREND LLAVEI conse LLAVED

    PARENI          shift and go to state 46


state 30

    (7) l_acc_1 -> COMA acc . l_acc_1
    (6) l_acc_1 -> .
    (7) l_acc_1 -> . COMA acc l_acc_1

    PCOMA           reduce using rule 6 (l_acc_1 -> .)
    COMA            shift and go to state 22

    l_acc_1                        shift and go to state 47

state 31

    (9) acc -> PARENI ID GUION . ID PAREND

    ID              shift and go to state 48


state 32

    (4) l_hab_1 -> COMA PARENI hab . PAREND l_hab_1

    PAREND          shift and go to state 49


state 33

    (14) sen_lum -> ID . LUM IGUAL NUM
    (15) sen_tem -> ID . TEM IGUAL NUM
    (16) sen_pre -> ID . PRE IGUAL TRUE
    (17) sen_pre -> ID . PRE IGUAL FALSE
    (18) sen_gas -> ID . GAS IGUAL TRUE
    (19) sen_gas -> ID . GAS IGUAL FALSE
    (20) sen_fue -> ID . FUE IGUAL TRUE
    (21) sen_fue -> ID . FUE IGUAL FALSE
    (22) sen_hum -> ID . HUM IGUAL NUM

    LUM             shift and go to state 50
    TEM             shift and go to state 51
    PRE             shift and go to state 52
    GAS             shift and go to state 53
    FUE             shift and go to state 54
    HUM             shift and go to state 55


state 34

    (8) hab -> ID COMA dim PCOMA sens . PCOMA actuas

    PCOMA           shift and go to state 56


state 35

    (11) sens -> sen . sens_1
    (12) sens_1 -> .
    (13) sens_1 -> . COMA sen sens_1

    PCOMA           reduce using rule 12 (sens_1 -> .)
    COMA            shift and go to state 58

    sens_1                         shift and go to state 57

state 36

    (23) sen -> sen_lum .

    COMA            reduce using rule 23 (sen -> sen_lum .)
    PCOMA           reduce using rule 23 (sen -> sen_lum .)


state 37

    (24) sen -> sen_tem .

    COMA            reduce using rule 24 (sen -> sen_tem .)
    PCOMA           reduce using rule 24 (sen -> sen_tem .)


state 38

    (25) sen -> sen_pre .

    COMA            reduce using rule 25 (sen -> sen_pre .)
    PCOMA           reduce using rule 25 (sen -> sen_pre .)


state 39

    (26) sen -> sen_gas .

    COMA            reduce using rule 26 (sen -> sen_gas .)
    PCOMA           reduce using rule 26 (sen -> sen_gas .)


state 40

    (27) sen -> sen_fue .

    COMA            reduce using rule 27 (sen -> sen_fue .)
    PCOMA           reduce using rule 27 (sen -> sen_fue .)


state 41

    (28) sen -> sen_hum .

    COMA            reduce using rule 28 (sen -> sen_hum .)
    PCOMA           reduce using rule 28 (sen -> sen_hum .)


state 42

    (10) dim -> PARENI NUM COMA . NUM PAREND

    NUM             shift and go to state 59


state 43

    (1) prog -> NEWH ID LLAVEI l_hab PCOMA ACCE l_acc PCOMA reglas LLAVED .

    $end            reduce using rule 1 (prog -> NEWH ID LLAVEI l_hab PCOMA ACCE l_acc PCOMA reglas LLAVED .)


state 44

    (46) reglas -> iff reglas_1 .

    LLAVED          reduce using rule 46 (reglas -> iff reglas_1 .)


state 45

    (48) reglas_1 -> PCOMA . iff reglas_1
    (49) iff -> . SI PARENI conds PAREND LLAVEI conse LLAVED

    SI              shift and go to state 29

    iff                            shift and go to state 60

state 46

    (49) iff -> SI PARENI . conds PAREND LLAVEI conse LLAVED
    (50) conds -> . condi conds_1
    (54) condi -> . condiB
    (55) condi -> . condiN
    (56) condiB -> . ID compaB TRUE
    (57) condiB -> . ID compaB FALSE
    (58) condiN -> . ID compa NUM

    ID              shift and go to state 65

    conds                          shift and go to state 61
    condi                          shift and go to state 62
    condiB                         shift and go to state 63
    condiN                         shift and go to state 64

state 47

    (7) l_acc_1 -> COMA acc l_acc_1 .

    PCOMA           reduce using rule 7 (l_acc_1 -> COMA acc l_acc_1 .)


state 48

    (9) acc -> PARENI ID GUION ID . PAREND

    PAREND          shift and go to state 66


state 49

    (4) l_hab_1 -> COMA PARENI hab PAREND . l_hab_1
    (3) l_hab_1 -> .
    (4) l_hab_1 -> . COMA PARENI hab PAREND l_hab_1

    PCOMA           reduce using rule 3 (l_hab_1 -> .)
    COMA            shift and go to state 17

    l_hab_1                        shift and go to state 67

state 50

    (14) sen_lum -> ID LUM . IGUAL NUM

    IGUAL           shift and go to state 68


state 51

    (15) sen_tem -> ID TEM . IGUAL NUM

    IGUAL           shift and go to state 69


state 52

    (16) sen_pre -> ID PRE . IGUAL TRUE
    (17) sen_pre -> ID PRE . IGUAL FALSE

    IGUAL           shift and go to state 70


state 53

    (18) sen_gas -> ID GAS . IGUAL TRUE
    (19) sen_gas -> ID GAS . IGUAL FALSE

    IGUAL           shift and go to state 71


state 54

    (20) sen_fue -> ID FUE . IGUAL TRUE
    (21) sen_fue -> ID FUE . IGUAL FALSE

    IGUAL           shift and go to state 72


state 55

    (22) sen_hum -> ID HUM . IGUAL NUM

    IGUAL           shift and go to state 73


state 56

    (8) hab -> ID COMA dim PCOMA sens PCOMA . actuas
    (29) actuas -> . actua actuas_1
    (32) actua -> . actua_cale
    (33) actua -> . actua_air
    (34) actua -> . actua_pers
    (35) actua -> . actua_roci
    (36) actua -> . actua_alar
    (37) actua_cale -> . ID CALE IGUAL NUM
    (38) actua_air -> . ID AIRE IGUAL NUM
    (39) actua_pers -> . ID PERS IGUAL SUBIR
    (40) actua_pers -> . ID PERS IGUAL BAJAR
    (41) actua_pers -> . ID PERS IGUAL PARAR
    (42) actua_roci -> . ID ROCI IGUAL TRUE
    (43) actua_roci -> . ID ROCI IGUAL FALSE
    (44) actua_alar -> . ID ALAR IGUAL TRUE
    (45) actua_alar -> . ID ALAR IGUAL FALSE

    ID              shift and go to state 74

    actuas                         shift and go to state 75
    actua                          shift and go to state 76
    actua_cale                     shift and go to state 77
    actua_air                      shift and go to state 78
    actua_pers                     shift and go to state 79
    actua_roci                     shift and go to state 80
    actua_alar                     shift and go to state 81

state 57

    (11) sens -> sen sens_1 .

    PCOMA           reduce using rule 11 (sens -> sen sens_1 .)


state 58

    (13) sens_1 -> COMA . sen sens_1
    (23) sen -> . sen_lum
    (24) sen -> . sen_tem
    (25) sen -> . sen_pre
    (26) sen -> . sen_gas
    (27) sen -> . sen_fue
    (28) sen -> . sen_hum
    (14) sen_lum -> . ID LUM IGUAL NUM
    (15) sen_tem -> . ID TEM IGUAL NUM
    (16) sen_pre -> . ID PRE IGUAL TRUE
    (17) sen_pre -> . ID PRE IGUAL FALSE
    (18) sen_gas -> . ID GAS IGUAL TRUE
    (19) sen_gas -> . ID GAS IGUAL FALSE
    (20) sen_fue -> . ID FUE IGUAL TRUE
    (21) sen_fue -> . ID FUE IGUAL FALSE
    (22) sen_hum -> . ID HUM IGUAL NUM

    ID              shift and go to state 33

    sen                            shift and go to state 82
    sen_lum                        shift and go to state 36
    sen_tem                        shift and go to state 37
    sen_pre                        shift and go to state 38
    sen_gas                        shift and go to state 39
    sen_fue                        shift and go to state 40
    sen_hum                        shift and go to state 41

state 59

    (10) dim -> PARENI NUM COMA NUM . PAREND

    PAREND          shift and go to state 83


state 60

    (48) reglas_1 -> PCOMA iff . reglas_1
    (47) reglas_1 -> .
    (48) reglas_1 -> . PCOMA iff reglas_1

    LLAVED          reduce using rule 47 (reglas_1 -> .)
    PCOMA           shift and go to state 45

    reglas_1                       shift and go to state 84

state 61

    (49) iff -> SI PARENI conds . PAREND LLAVEI conse LLAVED

    PAREND          shift and go to state 85


state 62

    (50) conds -> condi . conds_1
    (51) conds_1 -> .
    (52) conds_1 -> . AND condi conds_1
    (53) conds_1 -> . OR condi conds_1

    PAREND          reduce using rule 51 (conds_1 -> .)
    AND             shift and go to state 87
    OR              shift and go to state 88

    conds_1                        shift and go to state 86

state 63

    (54) condi -> condiB .

    AND             reduce using rule 54 (condi -> condiB .)
    OR              reduce using rule 54 (condi -> condiB .)
    PAREND          reduce using rule 54 (condi -> condiB .)


state 64

    (55) condi -> condiN .

    AND             reduce using rule 55 (condi -> condiN .)
    OR              reduce using rule 55 (condi -> condiN .)
    PAREND          reduce using rule 55 (condi -> condiN .)


state 65

    (56) condiB -> ID . compaB TRUE
    (57) condiB -> ID . compaB FALSE
    (58) condiN -> ID . compa NUM
    (65) compaB -> . IGUALC
    (66) compaB -> . DISTIN
    (62) compa -> . MENOR
    (63) compa -> . MAYOR
    (64) compa -> . IGUAL

    IGUALC          shift and go to state 91
    DISTIN          shift and go to state 92
    MENOR           shift and go to state 93
    MAYOR           shift and go to state 94
    IGUAL           shift and go to state 95

    compaB                         shift and go to state 89
    compa                          shift and go to state 90

state 66

    (9) acc -> PARENI ID GUION ID PAREND .

    COMA            reduce using rule 9 (acc -> PARENI ID GUION ID PAREND .)
    PCOMA           reduce using rule 9 (acc -> PARENI ID GUION ID PAREND .)


state 67

    (4) l_hab_1 -> COMA PARENI hab PAREND l_hab_1 .

    PCOMA           reduce using rule 4 (l_hab_1 -> COMA PARENI hab PAREND l_hab_1 .)


state 68

    (14) sen_lum -> ID LUM IGUAL . NUM

    NUM             shift and go to state 96


state 69

    (15) sen_tem -> ID TEM IGUAL . NUM

    NUM             shift and go to state 97


state 70

    (16) sen_pre -> ID PRE IGUAL . TRUE
    (17) sen_pre -> ID PRE IGUAL . FALSE

    TRUE            shift and go to state 98
    FALSE           shift and go to state 99


state 71

    (18) sen_gas -> ID GAS IGUAL . TRUE
    (19) sen_gas -> ID GAS IGUAL . FALSE

    TRUE            shift and go to state 100
    FALSE           shift and go to state 101


state 72

    (20) sen_fue -> ID FUE IGUAL . TRUE
    (21) sen_fue -> ID FUE IGUAL . FALSE

    TRUE            shift and go to state 102
    FALSE           shift and go to state 103


state 73

    (22) sen_hum -> ID HUM IGUAL . NUM

    NUM             shift and go to state 104


state 74

    (37) actua_cale -> ID . CALE IGUAL NUM
    (38) actua_air -> ID . AIRE IGUAL NUM
    (39) actua_pers -> ID . PERS IGUAL SUBIR
    (40) actua_pers -> ID . PERS IGUAL BAJAR
    (41) actua_pers -> ID . PERS IGUAL PARAR
    (42) actua_roci -> ID . ROCI IGUAL TRUE
    (43) actua_roci -> ID . ROCI IGUAL FALSE
    (44) actua_alar -> ID . ALAR IGUAL TRUE
    (45) actua_alar -> ID . ALAR IGUAL FALSE

    CALE            shift and go to state 105
    AIRE            shift and go to state 106
    PERS            shift and go to state 107
    ROCI            shift and go to state 108
    ALAR            shift and go to state 109


state 75

    (8) hab -> ID COMA dim PCOMA sens PCOMA actuas .

    PAREND          reduce using rule 8 (hab -> ID COMA dim PCOMA sens PCOMA actuas .)


state 76

    (29) actuas -> actua . actuas_1
    (30) actuas_1 -> .
    (31) actuas_1 -> . COMA actua actuas_1

    PAREND          reduce using rule 30 (actuas_1 -> .)
    COMA            shift and go to state 111

    actuas_1                       shift and go to state 110

state 77

    (32) actua -> actua_cale .

    COMA            reduce using rule 32 (actua -> actua_cale .)
    PAREND          reduce using rule 32 (actua -> actua_cale .)
    LLAVED          reduce using rule 32 (actua -> actua_cale .)


state 78

    (33) actua -> actua_air .

    COMA            reduce using rule 33 (actua -> actua_air .)
    PAREND          reduce using rule 33 (actua -> actua_air .)
    LLAVED          reduce using rule 33 (actua -> actua_air .)


state 79

    (34) actua -> actua_pers .

    COMA            reduce using rule 34 (actua -> actua_pers .)
    PAREND          reduce using rule 34 (actua -> actua_pers .)
    LLAVED          reduce using rule 34 (actua -> actua_pers .)


state 80

    (35) actua -> actua_roci .

    COMA            reduce using rule 35 (actua -> actua_roci .)
    PAREND          reduce using rule 35 (actua -> actua_roci .)
    LLAVED          reduce using rule 35 (actua -> actua_roci .)


state 81

    (36) actua -> actua_alar .

    COMA            reduce using rule 36 (actua -> actua_alar .)
    PAREND          reduce using rule 36 (actua -> actua_alar .)
    LLAVED          reduce using rule 36 (actua -> actua_alar .)


state 82

    (13) sens_1 -> COMA sen . sens_1
    (12) sens_1 -> .
    (13) sens_1 -> . COMA sen sens_1

    PCOMA           reduce using rule 12 (sens_1 -> .)
    COMA            shift and go to state 58

    sens_1                         shift and go to state 112

state 83

    (10) dim -> PARENI NUM COMA NUM PAREND .

    PCOMA           reduce using rule 10 (dim -> PARENI NUM COMA NUM PAREND .)


state 84

    (48) reglas_1 -> PCOMA iff reglas_1 .

    LLAVED          reduce using rule 48 (reglas_1 -> PCOMA iff reglas_1 .)


state 85

    (49) iff -> SI PARENI conds PAREND . LLAVEI conse LLAVED

    LLAVEI          shift and go to state 113


state 86

    (50) conds -> condi conds_1 .

    PAREND          reduce using rule 50 (conds -> condi conds_1 .)


state 87

    (52) conds_1 -> AND . condi conds_1
    (54) condi -> . condiB
    (55) condi -> . condiN
    (56) condiB -> . ID compaB TRUE
    (57) condiB -> . ID compaB FALSE
    (58) condiN -> . ID compa NUM

    ID              shift and go to state 65

    condi                          shift and go to state 114
    condiB                         shift and go to state 63
    condiN                         shift and go to state 64

state 88

    (53) conds_1 -> OR . condi conds_1
    (54) condi -> . condiB
    (55) condi -> . condiN
    (56) condiB -> . ID compaB TRUE
    (57) condiB -> . ID compaB FALSE
    (58) condiN -> . ID compa NUM

    ID              shift and go to state 65

    condi                          shift and go to state 115
    condiB                         shift and go to state 63
    condiN                         shift and go to state 64

state 89

    (56) condiB -> ID compaB . TRUE
    (57) condiB -> ID compaB . FALSE

    TRUE            shift and go to state 116
    FALSE           shift and go to state 117


state 90

    (58) condiN -> ID compa . NUM

    NUM             shift and go to state 118


state 91

    (65) compaB -> IGUALC .

    TRUE            reduce using rule 65 (compaB -> IGUALC .)
    FALSE           reduce using rule 65 (compaB -> IGUALC .)


state 92

    (66) compaB -> DISTIN .

    TRUE            reduce using rule 66 (compaB -> DISTIN .)
    FALSE           reduce using rule 66 (compaB -> DISTIN .)


state 93

    (62) compa -> MENOR .

    NUM             reduce using rule 62 (compa -> MENOR .)


state 94

    (63) compa -> MAYOR .

    NUM             reduce using rule 63 (compa -> MAYOR .)


state 95

    (64) compa -> IGUAL .

    NUM             reduce using rule 64 (compa -> IGUAL .)


state 96

    (14) sen_lum -> ID LUM IGUAL NUM .

    COMA            reduce using rule 14 (sen_lum -> ID LUM IGUAL NUM .)
    PCOMA           reduce using rule 14 (sen_lum -> ID LUM IGUAL NUM .)


state 97

    (15) sen_tem -> ID TEM IGUAL NUM .

    COMA            reduce using rule 15 (sen_tem -> ID TEM IGUAL NUM .)
    PCOMA           reduce using rule 15 (sen_tem -> ID TEM IGUAL NUM .)


state 98

    (16) sen_pre -> ID PRE IGUAL TRUE .

    COMA            reduce using rule 16 (sen_pre -> ID PRE IGUAL TRUE .)
    PCOMA           reduce using rule 16 (sen_pre -> ID PRE IGUAL TRUE .)


state 99

    (17) sen_pre -> ID PRE IGUAL FALSE .

    COMA            reduce using rule 17 (sen_pre -> ID PRE IGUAL FALSE .)
    PCOMA           reduce using rule 17 (sen_pre -> ID PRE IGUAL FALSE .)


state 100

    (18) sen_gas -> ID GAS IGUAL TRUE .

    COMA            reduce using rule 18 (sen_gas -> ID GAS IGUAL TRUE .)
    PCOMA           reduce using rule 18 (sen_gas -> ID GAS IGUAL TRUE .)


state 101

    (19) sen_gas -> ID GAS IGUAL FALSE .

    COMA            reduce using rule 19 (sen_gas -> ID GAS IGUAL FALSE .)
    PCOMA           reduce using rule 19 (sen_gas -> ID GAS IGUAL FALSE .)


state 102

    (20) sen_fue -> ID FUE IGUAL TRUE .

    COMA            reduce using rule 20 (sen_fue -> ID FUE IGUAL TRUE .)
    PCOMA           reduce using rule 20 (sen_fue -> ID FUE IGUAL TRUE .)


state 103

    (21) sen_fue -> ID FUE IGUAL FALSE .

    COMA            reduce using rule 21 (sen_fue -> ID FUE IGUAL FALSE .)
    PCOMA           reduce using rule 21 (sen_fue -> ID FUE IGUAL FALSE .)


state 104

    (22) sen_hum -> ID HUM IGUAL NUM .

    COMA            reduce using rule 22 (sen_hum -> ID HUM IGUAL NUM .)
    PCOMA           reduce using rule 22 (sen_hum -> ID HUM IGUAL NUM .)


state 105

    (37) actua_cale -> ID CALE . IGUAL NUM

    IGUAL           shift and go to state 119


state 106

    (38) actua_air -> ID AIRE . IGUAL NUM

    IGUAL           shift and go to state 120


state 107

    (39) actua_pers -> ID PERS . IGUAL SUBIR
    (40) actua_pers -> ID PERS . IGUAL BAJAR
    (41) actua_pers -> ID PERS . IGUAL PARAR

    IGUAL           shift and go to state 121


state 108

    (42) actua_roci -> ID ROCI . IGUAL TRUE
    (43) actua_roci -> ID ROCI . IGUAL FALSE

    IGUAL           shift and go to state 122


state 109

    (44) actua_alar -> ID ALAR . IGUAL TRUE
    (45) actua_alar -> ID ALAR . IGUAL FALSE

    IGUAL           shift and go to state 123


state 110

    (29) actuas -> actua actuas_1 .

    PAREND          reduce using rule 29 (actuas -> actua actuas_1 .)


state 111

    (31) actuas_1 -> COMA . actua actuas_1
    (32) actua -> . actua_cale
    (33) actua -> . actua_air
    (34) actua -> . actua_pers
    (35) actua -> . actua_roci
    (36) actua -> . actua_alar
    (37) actua_cale -> . ID CALE IGUAL NUM
    (38) actua_air -> . ID AIRE IGUAL NUM
    (39) actua_pers -> . ID PERS IGUAL SUBIR
    (40) actua_pers -> . ID PERS IGUAL BAJAR
    (41) actua_pers -> . ID PERS IGUAL PARAR
    (42) actua_roci -> . ID ROCI IGUAL TRUE
    (43) actua_roci -> . ID ROCI IGUAL FALSE
    (44) actua_alar -> . ID ALAR IGUAL TRUE
    (45) actua_alar -> . ID ALAR IGUAL FALSE

    ID              shift and go to state 74

    actua                          shift and go to state 124
    actua_cale                     shift and go to state 77
    actua_air                      shift and go to state 78
    actua_pers                     shift and go to state 79
    actua_roci                     shift and go to state 80
    actua_alar                     shift and go to state 81

state 112

    (13) sens_1 -> COMA sen sens_1 .

    PCOMA           reduce using rule 13 (sens_1 -> COMA sen sens_1 .)


state 113

    (49) iff -> SI PARENI conds PAREND LLAVEI . conse LLAVED
    (59) conse -> . actua conse_1
    (32) actua -> . actua_cale
    (33) actua -> . actua_air
    (34) actua -> . actua_pers
    (35) actua -> . actua_roci
    (36) actua -> . actua_alar
    (37) actua_cale -> . ID CALE IGUAL NUM
    (38) actua_air -> . ID AIRE IGUAL NUM
    (39) actua_pers -> . ID PERS IGUAL SUBIR
    (40) actua_pers -> . ID PERS IGUAL BAJAR
    (41) actua_pers -> . ID PERS IGUAL PARAR
    (42) actua_roci -> . ID ROCI IGUAL TRUE
    (43) actua_roci -> . ID ROCI IGUAL FALSE
    (44) actua_alar -> . ID ALAR IGUAL TRUE
    (45) actua_alar -> . ID ALAR IGUAL FALSE

    ID              shift and go to state 74

    conse                          shift and go to state 125
    actua                          shift and go to state 126
    actua_cale                     shift and go to state 77
    actua_air                      shift and go to state 78
    actua_pers                     shift and go to state 79
    actua_roci                     shift and go to state 80
    actua_alar                     shift and go to state 81

state 114

    (52) conds_1 -> AND condi . conds_1
    (51) conds_1 -> .
    (52) conds_1 -> . AND condi conds_1
    (53) conds_1 -> . OR condi conds_1

    PAREND          reduce using rule 51 (conds_1 -> .)
    AND             shift and go to state 87
    OR              shift and go to state 88

    conds_1                        shift and go to state 127

state 115

    (53) conds_1 -> OR condi . conds_1
    (51) conds_1 -> .
    (52) conds_1 -> . AND condi conds_1
    (53) conds_1 -> . OR condi conds_1

    PAREND          reduce using rule 51 (conds_1 -> .)
    AND             shift and go to state 87
    OR              shift and go to state 88

    conds_1                        shift and go to state 128

state 116

    (56) condiB -> ID compaB TRUE .

    AND             reduce using rule 56 (condiB -> ID compaB TRUE .)
    OR              reduce using rule 56 (condiB -> ID compaB TRUE .)
    PAREND          reduce using rule 56 (condiB -> ID compaB TRUE .)


state 117

    (57) condiB -> ID compaB FALSE .

    AND             reduce using rule 57 (condiB -> ID compaB FALSE .)
    OR              reduce using rule 57 (condiB -> ID compaB FALSE .)
    PAREND          reduce using rule 57 (condiB -> ID compaB FALSE .)


state 118

    (58) condiN -> ID compa NUM .

    AND             reduce using rule 58 (condiN -> ID compa NUM .)
    OR              reduce using rule 58 (condiN -> ID compa NUM .)
    PAREND          reduce using rule 58 (condiN -> ID compa NUM .)


state 119

    (37) actua_cale -> ID CALE IGUAL . NUM

    NUM             shift and go to state 129


state 120

    (38) actua_air -> ID AIRE IGUAL . NUM

    NUM             shift and go to state 130


state 121

    (39) actua_pers -> ID PERS IGUAL . SUBIR
    (40) actua_pers -> ID PERS IGUAL . BAJAR
    (41) actua_pers -> ID PERS IGUAL . PARAR

    SUBIR           shift and go to state 131
    BAJAR           shift and go to state 132
    PARAR           shift and go to state 133


state 122

    (42) actua_roci -> ID ROCI IGUAL . TRUE
    (43) actua_roci -> ID ROCI IGUAL . FALSE

    TRUE            shift and go to state 134
    FALSE           shift and go to state 135


state 123

    (44) actua_alar -> ID ALAR IGUAL . TRUE
    (45) actua_alar -> ID ALAR IGUAL . FALSE

    TRUE            shift and go to state 136
    FALSE           shift and go to state 137


state 124

    (31) actuas_1 -> COMA actua . actuas_1
    (30) actuas_1 -> .
    (31) actuas_1 -> . COMA actua actuas_1

    PAREND          reduce using rule 30 (actuas_1 -> .)
    COMA            shift and go to state 111

    actuas_1                       shift and go to state 138

state 125

    (49) iff -> SI PARENI conds PAREND LLAVEI conse . LLAVED

    LLAVED          shift and go to state 139


state 126

    (59) conse -> actua . conse_1
    (60) conse_1 -> .
    (61) conse_1 -> . COMA actua conse_1

    LLAVED          reduce using rule 60 (conse_1 -> .)
    COMA            shift and go to state 141

    conse_1                        shift and go to state 140

state 127

    (52) conds_1 -> AND condi conds_1 .

    PAREND          reduce using rule 52 (conds_1 -> AND condi conds_1 .)


state 128

    (53) conds_1 -> OR condi conds_1 .

    PAREND          reduce using rule 53 (conds_1 -> OR condi conds_1 .)


state 129

    (37) actua_cale -> ID CALE IGUAL NUM .

    COMA            reduce using rule 37 (actua_cale -> ID CALE IGUAL NUM .)
    PAREND          reduce using rule 37 (actua_cale -> ID CALE IGUAL NUM .)
    LLAVED          reduce using rule 37 (actua_cale -> ID CALE IGUAL NUM .)


state 130

    (38) actua_air -> ID AIRE IGUAL NUM .

    COMA            reduce using rule 38 (actua_air -> ID AIRE IGUAL NUM .)
    PAREND          reduce using rule 38 (actua_air -> ID AIRE IGUAL NUM .)
    LLAVED          reduce using rule 38 (actua_air -> ID AIRE IGUAL NUM .)


state 131

    (39) actua_pers -> ID PERS IGUAL SUBIR .

    COMA            reduce using rule 39 (actua_pers -> ID PERS IGUAL SUBIR .)
    PAREND          reduce using rule 39 (actua_pers -> ID PERS IGUAL SUBIR .)
    LLAVED          reduce using rule 39 (actua_pers -> ID PERS IGUAL SUBIR .)


state 132

    (40) actua_pers -> ID PERS IGUAL BAJAR .

    COMA            reduce using rule 40 (actua_pers -> ID PERS IGUAL BAJAR .)
    PAREND          reduce using rule 40 (actua_pers -> ID PERS IGUAL BAJAR .)
    LLAVED          reduce using rule 40 (actua_pers -> ID PERS IGUAL BAJAR .)


state 133

    (41) actua_pers -> ID PERS IGUAL PARAR .

    COMA            reduce using rule 41 (actua_pers -> ID PERS IGUAL PARAR .)
    PAREND          reduce using rule 41 (actua_pers -> ID PERS IGUAL PARAR .)
    LLAVED          reduce using rule 41 (actua_pers -> ID PERS IGUAL PARAR .)


state 134

    (42) actua_roci -> ID ROCI IGUAL TRUE .

    COMA            reduce using rule 42 (actua_roci -> ID ROCI IGUAL TRUE .)
    PAREND          reduce using rule 42 (actua_roci -> ID ROCI IGUAL TRUE .)
    LLAVED          reduce using rule 42 (actua_roci -> ID ROCI IGUAL TRUE .)


state 135

    (43) actua_roci -> ID ROCI IGUAL FALSE .

    COMA            reduce using rule 43 (actua_roci -> ID ROCI IGUAL FALSE .)
    PAREND          reduce using rule 43 (actua_roci -> ID ROCI IGUAL FALSE .)
    LLAVED          reduce using rule 43 (actua_roci -> ID ROCI IGUAL FALSE .)


state 136

    (44) actua_alar -> ID ALAR IGUAL TRUE .

    COMA            reduce using rule 44 (actua_alar -> ID ALAR IGUAL TRUE .)
    PAREND          reduce using rule 44 (actua_alar -> ID ALAR IGUAL TRUE .)
    LLAVED          reduce using rule 44 (actua_alar -> ID ALAR IGUAL TRUE .)


state 137

    (45) actua_alar -> ID ALAR IGUAL FALSE .

    COMA            reduce using rule 45 (actua_alar -> ID ALAR IGUAL FALSE .)
    PAREND          reduce using rule 45 (actua_alar -> ID ALAR IGUAL FALSE .)
    LLAVED          reduce using rule 45 (actua_alar -> ID ALAR IGUAL FALSE .)


state 138

    (31) actuas_1 -> COMA actua actuas_1 .

    PAREND          reduce using rule 31 (actuas_1 -> COMA actua actuas_1 .)


state 139

    (49) iff -> SI PARENI conds PAREND LLAVEI conse LLAVED .

    PCOMA           reduce using rule 49 (iff -> SI PARENI conds PAREND LLAVEI conse LLAVED .)
    LLAVED          reduce using rule 49 (iff -> SI PARENI conds PAREND LLAVEI conse LLAVED .)


state 140

    (59) conse -> actua conse_1 .

    LLAVED          reduce using rule 59 (conse -> actua conse_1 .)


state 141

    (61) conse_1 -> COMA . actua conse_1
    (32) actua -> . actua_cale
    (33) actua -> . actua_air
    (34) actua -> . actua_pers
    (35) actua -> . actua_roci
    (36) actua -> . actua_alar
    (37) actua_cale -> . ID CALE IGUAL NUM
    (38) actua_air -> . ID AIRE IGUAL NUM
    (39) actua_pers -> . ID PERS IGUAL SUBIR
    (40) actua_pers -> . ID PERS IGUAL BAJAR
    (41) actua_pers -> . ID PERS IGUAL PARAR
    (42) actua_roci -> . ID ROCI IGUAL TRUE
    (43) actua_roci -> . ID ROCI IGUAL FALSE
    (44) actua_alar -> . ID ALAR IGUAL TRUE
    (45) actua_alar -> . ID ALAR IGUAL FALSE

    ID              shift and go to state 74

    actua                          shift and go to state 142
    actua_cale                     shift and go to state 77
    actua_air                      shift and go to state 78
    actua_pers                     shift and go to state 79
    actua_roci                     shift and go to state 80
    actua_alar                     shift and go to state 81

state 142

    (61) conse_1 -> COMA actua . conse_1
    (60) conse_1 -> .
    (61) conse_1 -> . COMA actua conse_1

    LLAVED          reduce using rule 60 (conse_1 -> .)
    COMA            shift and go to state 141

    conse_1                        shift and go to state 143

state 143

    (61) conse_1 -> COMA actua conse_1 .

    LLAVED          reduce using rule 61 (conse_1 -> COMA actua conse_1 .)

